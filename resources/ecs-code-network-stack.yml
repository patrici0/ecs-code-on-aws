Description:
    This template deploys a VPC, with a pair of public subnets spread across two Availability Zones. It deploys an Internet Gateway, with a default route on the public subnets.

Parameters:

    EnvironmentName:
        Description: This name will be prefixed to resource names and will make easier for you to know what are your resources.
        Type: String
        AllowedPattern : ".+"

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC.
        Type: String
        Default: 10.192.0.0/16
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone.
        Type: String
        Default: 10.192.10.0/24
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone.
        Type: String
        Default: 10.192.11.0/24
        AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

Resources:

    VPC:
        Type: AWS::EC2::VPC
        Properties:
            EnableDnsHostnames: True
            CidrBlock: !Ref VpcCIDR
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ecs-code-vpc

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ecs-code-vpc-ig

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ecs-code-public-subnet-az1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ecs-code-public-subnet-az2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ecs-code-public-routes

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    #NoIngressSecurityGroup:
        #Type: AWS::EC2::SecurityGroup
        #Properties:
            #GroupName: "no-ingress-sg"
            #GroupDescription: "Security group with no ingress rule"
            #VpcId: !Ref VPC

Outputs:
    Subnet1:
        Description: Public subnet 1
        Value: !Ref PublicSubnet1
        #Export:
            #Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ecs-code-public-subnet1' ] ]
    Subnet2:
        Description: Public subnet 2
        Value: !Ref PublicSubnet2
        #Export:
            #Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ecs-code-public-subnet2' ] ]
    VPC:
        Description: VPC info
        Value: !Ref VPC
        #Export:
            #Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ecs-code-vpc' ] ]
